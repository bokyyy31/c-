#include <stdio.h>
#include <string.h>

struct Product {
    int id;
    char name[100];
    int price;
    int stock_in;
    int sold;
    int total_sales;
};

int main()
{
    struct Product products[5];
    int product_count = 0;
    int menu;
    int i;

    
    for (i = 0; i < 5; i++)
    {
        products[i].id = 0;
        strcpy(products[i].name, "");
        products[i].price = 0;
        products[i].stock_in = 0;
        products[i].sold = 0;
        products[i].total_sales = 0;
    }

    printf("[쇼핑몰 관리 프로그램]\n");

    while (1)
    {
        printf("\n원하는 메뉴를 선택하세요.(1. 입고, 2. 판매, 3. 개별현황, 4. 전체현황, 5. 종료)\n");
        scanf("%d", &menu);

        if (menu == 1)
        {
            if (product_count >= 5)
            {
                printf("상품 개수 초과. 입고불가. \n");
                continue;
            }

            int input_id;
            printf("상품ID : ");
            scanf("%d", &input_id);

            
            int found = -1;
            for (i = 0; i < product_count; i++)
            {
                if (products[i].id == input_id)
                {
                    found = i;
                    break;
                }
            }

            if (found == -1)
            {
                products[product_count].id = input_id;
                
                printf("상품명 : ");
                scanf("%s", products[product_count].name);
                
                printf("입고량 : ");
                scanf("%d", &products[product_count].stock_in);
                
                printf("판매가격 : ");
                scanf("%d", &products[product_count].price);
                
                product_count++;
            }
            else
            {
                int add_stock;
                printf("입고량 : ");
                scanf("%d", &add_stock);
                products[found].stock_in = products[found].stock_in + add_stock;
            }
        }
        else if (menu == 2)
        {
            int input_id;
            printf("상품ID : ");
            scanf("%d", &input_id);

            
            int found = -1;
            for (i = 0; i < product_count; i++)
            {
                if (products[i].id == input_id)
                {
                    found = i;
                    break;
                }
            }

            if (found == -1)
            {
                printf("해당 ID 상품없음.\n");
            }
            else
            {
                int sell_amount;
                printf("판매량 : ");
                scanf("%d", &sell_amount);
                
                products[found].sold = products[found].sold + sell_amount;
                products[found].total_sales = products[found].sold * products[found].price;
            }
        }
        else if (menu == 3)
        {
            int input_id;
            printf("상품ID : ");
            scanf("%d", &input_id);

            int found = -1;
            for (i = 0; i < product_count; i++)
            {
                if (products[i].id == input_id)
                {
                    found = i;
                    break;
                }
            }

            if (found == -1)
            {
                printf("해당 ID 상품없음.\n");
            }
            else
            {
                printf("\n[상품 정보]\n");
                printf("상품ID : %d\n", products[found].id);
                printf("상품명 : %s\n", products[found].name);
                printf("판매가격 : %d원\n", products[found].price);
                printf("입고량 : %d\n", products[found].stock_in);
                printf("판매량 : %d\n", products[found].sold);
                printf("재고량 : %d\n", products[found].stock_in - products[found].sold);
                printf("총 판매금액 : %d원\n", products[found].total_sales);
            }
        }
        else if (menu == 4)
        {
            int total_sold = 0;
            int total_in = 0;
            int total_amount = 0;

            printf("\n[전체 상품 현황]\n");
            
            for (i = 0; i < product_count; i++)
            {
                total_sold = total_sold + products[i].sold;
                total_in = total_in + products[i].stock_in;
                total_amount = total_amount + products[i].total_sales;
            }

            double sell_rate = 0.0;
            if (total_in > 0)
            {
                sell_rate = (double)total_sold / total_in * 100;
            }

            printf("총 판매량 : %d (판매율 %.2f%%)\n", total_sold, sell_rate);
            printf("총 판매금액 : %d원\n", total_amount);

            
            if (product_count > 0)
            {
                int max_idx = 0;
                for (i = 1; i < product_count; i++)
                {
                    if (products[i].sold > products[max_idx].sold)
                    {
                        max_idx = i;
                    }
                }
                printf("가장 많이 판매된 상품 : ID %d, 상품명 : %s, 판매량 %d\n",
                    products[max_idx].id, products[max_idx].name, products[max_idx].sold);

               
                int min_idx = 0;
                for (i = 1; i < product_count; i++)
                {
                    if (products[i].sold < products[min_idx].sold)
                    {
                        min_idx = i;
                    }
                }
                printf("가장 적게 판매된 상품 : ID %d, 상품명 : %s, 판매량 %d\n",
                    products[min_idx].id, products[min_idx].name, products[min_idx].sold);

              
                for (i = 0; i < product_count; i++)
                {
                    int stock = products[i].stock_in - products[i].sold;
                    if (stock <= 2)
                    {
                        printf("상품 ID %d : 상품명 : %s 재고부족(%d)\n",
                            products[i].id, products[i].name, stock);
                    }
                }
            }
        }
        else if (menu == 5)
        {
            printf("프로그램 종료.\n");
            break;
        }
    }

    return 0;
}
